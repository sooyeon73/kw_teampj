// <auto-generated />
using AspnetCoreStudy.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace AspnetCoreStudy.Migrations
{
    [DbContext(typeof(AspnetNoteDbContext))]
    [Migration("20210610095748_add-migration 1")]
    partial class addmigration1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AspnetCoreStudy.Models.Comment", b =>
                {
                    b.Property<int>("CommentID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CommentContents");

                    b.Property<int?>("Note1NoteNo");

                    b.Property<int>("NoteID");

                    b.HasKey("CommentID");

                    b.HasIndex("Note1NoteNo");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("AspnetCoreStudy.Models.Files", b =>
                {
                    b.Property<int>("FileNo")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BoardNo");

                    b.Property<byte[]>("DataFiles");

                    b.Property<string>("FileType");

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.Property<int>("NoteNo");

                    b.Property<int>("UserNo");

                    b.HasKey("FileNo");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("AspnetCoreStudy.Models.Note", b =>
                {
                    b.Property<int>("NoteNo")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("NoteContents")
                        .IsRequired();

                    b.Property<string>("NoteTimeStamp");

                    b.Property<string>("NoteTitle")
                        .IsRequired();

                    b.Property<int>("ReadNum");

                    b.Property<int>("UserNo");

                    b.HasKey("NoteNo");

                    b.HasIndex("UserNo");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("AspnetCoreStudy.Models.Note1", b =>
                {
                    b.Property<int>("NoteNo")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment1");

                    b.Property<string>("NoteContents")
                        .IsRequired();

                    b.Property<string>("NoteTimeStamp");

                    b.Property<string>("NoteTitle")
                        .IsRequired();

                    b.Property<int>("ReadNum");

                    b.Property<int>("UserNo");

                    b.HasKey("NoteNo");

                    b.HasIndex("UserNo");

                    b.ToTable("Notes1");
                });

            modelBuilder.Entity("AspnetCoreStudy.Models.Note2", b =>
                {
                    b.Property<int>("NoteNo")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("NoteAnswer");

                    b.Property<string>("NoteAnswerTimeStamp");

                    b.Property<string>("NoteContents")
                        .IsRequired();

                    b.Property<string>("NoteTimeStamp");

                    b.Property<string>("NoteTitle")
                        .IsRequired();

                    b.Property<int>("ReadNum");

                    b.Property<int>("UserNo");

                    b.HasKey("NoteNo");

                    b.HasIndex("UserNo");

                    b.ToTable("Notes2");
                });

            modelBuilder.Entity("AspnetCoreStudy.Models.Note3", b =>
                {
                    b.Property<int>("NoteNo")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AssignmentContents");

                    b.Property<string>("DeadLine");

                    b.Property<string>("NoteContents")
                        .IsRequired();

                    b.Property<string>("NoteTimeStamp");

                    b.Property<string>("NoteTitle")
                        .IsRequired();

                    b.Property<int>("ReadNum");

                    b.Property<int>("UserNo");

                    b.HasKey("NoteNo");

                    b.HasIndex("UserNo");

                    b.ToTable("Notes3");
                });

            modelBuilder.Entity("AspnetCoreStudy.Models.User", b =>
                {
                    b.Property<int>("UserNo")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("IfStudent")
                        .IsRequired();

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.Property<string>("UserName")
                        .IsRequired();

                    b.Property<string>("UserPassword")
                        .IsRequired();

                    b.HasKey("UserNo");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AspnetCoreStudy.Models.Comment", b =>
                {
                    b.HasOne("AspnetCoreStudy.Models.Note1")
                        .WithMany("CommentSet")
                        .HasForeignKey("Note1NoteNo");
                });

            modelBuilder.Entity("AspnetCoreStudy.Models.Note", b =>
                {
                    b.HasOne("AspnetCoreStudy.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserNo")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AspnetCoreStudy.Models.Note1", b =>
                {
                    b.HasOne("AspnetCoreStudy.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserNo")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AspnetCoreStudy.Models.Note2", b =>
                {
                    b.HasOne("AspnetCoreStudy.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserNo")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AspnetCoreStudy.Models.Note3", b =>
                {
                    b.HasOne("AspnetCoreStudy.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserNo")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
